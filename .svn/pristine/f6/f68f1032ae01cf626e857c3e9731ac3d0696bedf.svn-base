/**
 * 
 */
package com.ensis.bloodgroup.controller;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.ensis.bloodgroup.models.DonarAcceptRequestModel;
import com.ensis.bloodgroup.models.DonarRegistrationModel;
import com.ensis.bloodgroup.models.GetDonerProfileModel;
import com.ensis.bloodgroup.models.LocationTrackingObject;
import com.ensis.bloodgroup.models.ProfileUploadImageStatusModel;
import com.ensis.bloodgroup.models.StatusObject;
import com.ensis.bloodgroup.models.TrackDonarLocation;
import com.ensis.bloodgroup.service.DonarRegistrationService;

/**
 * @author Ensis
 *
 */
@Controller
public class DonarRegistrationController {

	@Autowired
	DonarRegistrationService donarRegistrationService;

	/**
	 * @param donarRegistrationService
	 *            the donarRegistrationService to set
	 */
	public void setDonarRegistrationService(
			DonarRegistrationService donarRegistrationService) {
		this.donarRegistrationService = donarRegistrationService;
	}

	/**
	 * 
	 * @param donarRegistrationModel
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/donarRegistration", method = RequestMethod.POST, headers = { "Content-type=application/json" }, produces = { "application/json" })
	@ResponseBody
	public StatusObject registerPatient(
			@RequestBody DonarRegistrationModel donarRegistrationModel)
			throws Exception {

		return donarRegistrationService
				.donarRegistration(donarRegistrationModel);
	}

	/**
	 * 
	 * @param donarRegistrationModel
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/donarCreateProfile", method = RequestMethod.POST, headers = { "Content-type=application/json" }, produces = { "application/json" })
	@ResponseBody
	public StatusObject createProfile(
			@RequestBody DonarRegistrationModel donarRegistrationModel)
			throws Exception {

		return donarRegistrationService
				.creteDonerProfile(donarRegistrationModel);
	}

	/**
	 * 
	 * @param donarRegistrationModel
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/donarUpdateProfile", method = RequestMethod.POST, headers = { "Content-type=application/json" }, produces = { "application/json" })
	@ResponseBody
	public StatusObject updateProfile(
			@RequestBody DonarRegistrationModel donarRegistrationModel)
			throws Exception {

		return donarRegistrationService
				.updateDonerProfile(donarRegistrationModel);
	}

	/**
	 * 
	 * @param donerid
	 * @return
	 */
	@RequestMapping(value = "/donarGetProfile", method = RequestMethod.GET, produces = { "application/json" })
	@ResponseBody
	public GetDonerProfileModel donarGetProfile(@RequestHeader int donerid) {

		return donarRegistrationService.getDonerProfile(donerid);
	}

	/**
	 * 
	 * @param trackDonarLocation
	 * @return
	 */
	@RequestMapping(value = "/trackDonarLocation", method = RequestMethod.POST, headers = { "Content-type=application/json" }, produces = { "application/json" })
	@ResponseBody
	public LocationTrackingObject trackDonarLocation(
			@RequestBody TrackDonarLocation trackDonarLocation) {

		return donarRegistrationService.trackDonarLocation(trackDonarLocation);
	}

	/**
	 * 
	 * @param trackDonarLocation
	 * @return
	 */
	@RequestMapping(value = "/donarHistory", method = RequestMethod.GET, produces = { "application/json" })
	@ResponseBody
	public List<?> donarHistory(@RequestHeader int donorId) {

		return donarRegistrationService.getDonarHistory(donorId);
	}

	/**
	 * 
	 * @param donerid
	 * @return
	 */
	@RequestMapping(value = "/acceptRequest", method = RequestMethod.POST, headers = { "Content-type=application/json" }, produces = { "application/json" })
	@ResponseBody
	public GetDonerProfileModel acceptRequest(
			@RequestBody DonarAcceptRequestModel donarAcceptRequestModel) {

		// return donarRegistrationService.getDonerProfile(donerid);
		return null;
	}

	/**
	 * 
	 * @param file
	 * @return
	 */
	@RequestMapping(value = "/UploadImage", method = RequestMethod.POST)
	public @ResponseBody ProfileUploadImageStatusModel uploadFileHandler(
			@RequestParam("imagename") MultipartFile file) {

		return donarRegistrationService.profileUploadImage(file);

	}

	/**
	 * 
	 * @param file
	 * @return
	 * @throws IOException
	 */
	@RequestMapping(value = "/getImage", method = RequestMethod.GET, produces = { "image/jpg" })
	@ResponseBody
	public byte[] getLogo(@RequestParam("fileName") String file)
			throws IOException {

		return donarRegistrationService.getImage(file);
	}

}
