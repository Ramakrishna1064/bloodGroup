package com.ensis.bloodgroup.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ensis.bloodgroup.models.AcceptedDonorsListModel;
import com.ensis.bloodgroup.models.ChangeRequestStatusModel;
import com.ensis.bloodgroup.models.GetBloodRequestsModel;
import com.ensis.bloodgroup.models.SentBloodRequestsModel;
import com.ensis.bloodgroup.models.StatusObject;
import com.ensis.bloodgroup.service.ListOfRequestsService;

@Controller
public class ListOfRequests {

	@Autowired
	ListOfRequestsService listOfRequestsService;

	public void setListOfRequestsService(
			ListOfRequestsService listOfRequestsService) {
		this.listOfRequestsService = listOfRequestsService;
	}

	/**
	 * 
	 * @param donorId
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/listOfBloodRequests", method = RequestMethod.GET, produces = { "application/json" })
	@ResponseBody
	public List<GetBloodRequestsModel> getRequestsList(
			@RequestHeader int donorId) throws Exception {

		return listOfRequestsService.getListOfRequests(donorId);
	}

	/**
	 * 
	 * @param changeRequestStatusModel
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/setRequestStatusFromDonor", method = RequestMethod.POST, headers = { "Content-type=application/json" }, produces = { "application/json" })
	@ResponseBody
	public StatusObject setRequestStatusFromDonor(
			@RequestBody ChangeRequestStatusModel changeRequestStatusModel)
			throws Exception {
		System.out.println(changeRequestStatusModel.getDonorreqid());

		return listOfRequestsService
				.setRequestStatusFromDonorService(changeRequestStatusModel);
	}

	/**
	 * 
	 * @param organizationid
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/getAcceptedDonorsList", method = RequestMethod.GET, produces = { "application/json" })
	@ResponseBody
	public List<AcceptedDonorsListModel> getAcceptedDonorsList(@RequestHeader int organizationid,@RequestHeader int requestid) throws Exception {
		System.out.println(organizationid);

		return listOfRequestsService.getAcceptedDonorsListService(organizationid,requestid);
	}
	
	
	@RequestMapping(value = "/getSentRequestsList", method = RequestMethod.GET, produces = { "application/json" })
	@ResponseBody
	public List<SentBloodRequestsModel> getSentRequestsList(@RequestHeader int organizationid) throws Exception {
		System.out.println(organizationid);

		return listOfRequestsService.getSentRequestsListService(organizationid);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
